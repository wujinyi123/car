<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ddz.car.mapper.CarMapper">
    <!--分页查询-->
    <select id="listCar" parameterType="com.ddz.car.domain.qo.CarQO" resultType="com.ddz.car.domain.dto.CarDTO">
        select
        cnumber,
        brand,
        cname,
        price,
        seatnumber,
        carphoto,
        state
        from car
        where state='1'
        <if test="brand!=null and brand!='0'.toString()">
            and brand=#{brand}
        </if>
        <if test="seatnumber!=null and seatnumber!='0'.toString()">
            and seatnumber=#{seatnumber}
        </if>
        <choose>
            <when test="price=='1'.toString()">and price &lt; 100</when>
            <when test="price=='2'.toString()">and price &gt;= 100 and price &lt; 200</when>
            <when test="price=='3'.toString()">and price &gt;= 200 and price &lt; 300</when>
            <when test="price=='4'.toString()">and price &gt;= 300</when>
            <otherwise></otherwise>
        </choose>
    </select>

    <!--码表-->
    <select id="listBrand" resultType="string">
        select distinct brand from car where state='1' order by brand
    </select>

    <select id="listSeatnumber" resultType="string">
        select distinct seatnumber from car where state='1' order by seatnumber
    </select>

    <!--删除操作-->
    <update id="deleteCar" parameterType="int">
        update Car set state = 0 where cnumber = #{cnumber}
    </update>

    <!--更新车辆信息-->
    <update id="updateCar" parameterType="com.ddz.car.domain.qo.CarUpdateQO">
        update Car set price = #{price} where cnumber = #{cnumber}
    </update>

    <select id="addFloatCar" parameterType="int" resultType="com.ddz.car.domain.dto.CarDTO">
        select
        cnumber,
        brand,
        cname,
        price,
        seatnumber,
        carphoto,
        state from car where cnumber=#{cnumber}
    </select>

    <!-- 添加车辆-->
    <insert id="insertCar" parameterType="com.ddz.car.domain.qo.InsertCarQO">
        insert into car(brand,cname,price,seatnumber,state)
        values (#{brand},#{cname},#{price},#{seatnumber},'1')
    </insert>

    <select id="checkCar" parameterType="com.ddz.car.domain.qo.RentalQO" resultType="com.ddz.car.domain.dto.CarDTO">
        select
        cs.cnumber,
        cs.brand,
        cs.cname,
        cs.price,
        cs.seatnumber,
        cs.carphoto,
        cs.state
        from car cs
        left join orders o
        on cs.cnumber = o.cnumber
        WHERE
        cs.state = '1'
        <choose>
            <when test="pcartime!=null and pcartime!=''">and (o.pay is null or ( o.pay = '1'and #{pcartime}>o.rcartime ))</when>
            <otherwise>and (o.pay is null or o.pay = '1')</otherwise>
        </choose>
        <if test="brand!=null and brand!='0'.toString()">
            and cs.brand=#{brand}
        </if>
        <if test="seatnumber!=null and seatnumber!='0'.toString()">
            and cs.seatnumber=#{seatnumber}
        </if>
        <choose>
            <when test="price=='1'.toString()">and cs.price &lt; 100</when>
            <when test="price=='2'.toString()">and cs.price &gt;= 100 and cs.price &lt; 200</when>
            <when test="price=='3'.toString()">and cs.price &gt;= 200 and cs.price &lt; 300</when>
            <when test="price=='4'.toString()">and cs.price &gt;= 300</when>
            <otherwise></otherwise>
        </choose>
    </select>

</mapper>